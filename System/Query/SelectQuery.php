<?php

namespace DomacinskiBurek\System\Query;

use Exception;
use DomacinskiBurek\System\Query\Interfaces\QueryInterface;

class SelectQuery implements QueryInterface
{
    private array $queryBox = [
        "exist_user_check"               => "SELECT id, password, is_verified, first_name, last_name, email FROM mt_user WHERE email = ? OR username = ?",
        "user_verification"              => "SELECT id, u_id FROM mt_user_verification WHERE uuid = ? AND status = 0",
        "exist_user_session_check"       => "SELECT mus.u_id FROM mt_user_sessions mus INNER JOIN mt_user mu ON mu.id = mus.u_id WHERE mus.uuid = ?",
        "user_reset_password_check"      => "SELECT id, u_id, created_at FROM mt_user_reset_password WHERE uuid = ?",
        "user_module_access_list"        => "SELECT mm.id, mm.name, mm.route, mm.translate_tag, mm.is_hidden FROM mt_user mu INNER JOIN mt_roles mr ON mr.id = mu.role INNER JOIN mt_role_m_access mrma on mr.id = mrma.r_id INNER JOIN mt_module mm on mrma.m_id = mm.id WHERE mu.id = ? AND mrma.m_id NOT IN (SELECT mumb.m_id FROM mt_user_m_block mumb WHERE mumb.u_id = mu.id)",
        "user_page_access_list"          => "SELECT mp.id, mp.name, mp.route, mp.icon, mp.translate_tag, mp.is_hidden FROM mt_user mu INNER JOIN mt_roles mr ON mr.id = mu.role INNER JOIN mt_role_p_access mrpa on mr.id = mrpa.r_id INNER JOIN mt_page mp on mrpa.p_id = mp.id WHERE mu.id = ? AND mp.m_id = ? AND mp.s_id IS NULL AND mrpa.p_id NOT IN (SELECT mupb.p_id FROM mt_user_p_block mupb WHERE mupb.u_id = mu.id)",
        "user_sub_page_access_list"      => "SELECT mp.id, mp.name, mp.route, mp.icon, mp.translate_tag, mp.is_hidden FROM mt_user mu INNER JOIN mt_roles mr ON mr.id = mu.role INNER JOIN mt_role_p_access mrpa on mr.id = mrpa.r_id INNER JOIN mt_page mp on mrpa.p_id = mp.id WHERE mu.id = ? AND mp.m_id = ? AND mp.s_id = ? AND mrpa.p_id NOT IN (SELECT mupb.p_id FROM mt_user_p_block mupb WHERE mupb.u_id = mu.id)",
        "user_details"                   => "SELECT mu.id, mu.uuid, mu.first_name, mu.last_name, mu.username, mu.avatar, mu.email, mu.phone, mu.dateofbirth, ml.locale AS locale, mr.name AS role FROM mt_user mu INNER JOIN mt_roles mr ON mu.role = mr.id INNER JOIN mt_language ml on mu.locale = ml.id WHERE mu.id = ?",
        "user_id_uuid"                   => "SELECT id FROM mt_user WHERE uuid = ?",
        "site_languages"                 => "SELECT id, name, locale, flag FROM mt_language",
        "site_default_language"          => "SELECT id, name, locale, flag FROM mt_language WHERE is_default = true LIMIT 1",
        "user_linked_school_user"        => "SELECT msu.id, msu.first_name, msu.last_name, msr.name AS role, msc.name AS class_name, ms.name AS school_name FROM mt_school_user msu INNER JOIN mt_school_role msr ON msu.role = msr.id LEFT JOIN mt_school_user_link msul ON msu.id = msul.s_id LEFT JOIN mt_school_class msc ON msul.sc_id = msc.id LEFT JOIN mt_school_class_link mscl ON msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id LEFT JOIN mt_school ms ON msml.s_id = ms.id WHERE msu.u_id = ?",
        "city_list"                      => "SELECT id, name FROM mt_cities WHERE CASE WHEN :string = '' THEN name != '' WHEN :string != '' THEN name LIKE '%s' END",
        "school_list"                    => "SELECT ms.id, ms.name FROM mt_school ms INNER JOIN mt_school_link msl ON ms.id = msl.s_id WHERE msl.c_id = :city_id AND CASE WHEN :string = '' THEN ms.name != '' WHEN :string != '' THEN ms.name LIKE '%s' END",
        "school_latest_list"             => "SELECT ms.id, ms.name, mc.name AS city_name, mc.id AS city_id FROM mt_school ms INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id ORDER BY ms.id DESC LIMIT %d",
        "school_class_list"              => "SELECT msc.id, msc.name FROM mt_school_class msc INNER JOIN mt_school_class_link mscl ON msc.id = mscl.c_id WHERE mscl.m_id = :major_id AND CASE WHEN :string = '' THEN msc.name != '' WHEN :string != '' THEN msc.name LIKE '%s' END",
        "school_class_table_list_count"  => "SELECT (SELECT COUNT(DISTINCT msc.id) FROM mt_school_class msc INNER JOIN (SELECT c_id, m_id FROM mt_school_class_link GROUP BY c_id) mscl ON msc.id = mscl.c_id INNER JOIN mt_school_major msm ON mscl.m_id = msm.id INNER JOIN mt_school_major_link msml ON msm.id = msml.m_id LEFT JOIN mt_school ms ON msml.s_id = ms.id) AS total, (SELECT COUNT(DISTINCT msc.id) AS filtered FROM mt_school_class msc INNER JOIN (SELECT c_id, m_id FROM mt_school_class_link GROUP BY c_id) mscl ON msc.id = mscl.c_id INNER JOIN mt_school_major msm ON mscl.m_id = msm.id INNER JOIN mt_school_major_link msml ON msm.id = msml.m_id LEFT JOIN mt_school ms ON msml.s_id = ms.id %s) AS filtered",
        "school_class_table_list"        => "SELECT %s FROM mt_school_class msc INNER JOIN mt_school_class_link mscl ON msc.id = mscl.c_id INNER JOIN mt_school_major msm ON mscl.m_id = msm.id INNER JOIN mt_school_major_link msml ON msm.id = msml.m_id LEFT JOIN mt_school ms ON msml.s_id = ms.id LEFT JOIN mt_user mu ON msc.verified_by = mu.id %s GROUP BY msc.id ORDER BY %s LIMIT %s",
        "school_major_list"              => "SELECT msm.id, msm.name FROM mt_school_major msm INNER JOIN mt_school_major_link msml ON msm.id = msml.m_id WHERE msml.s_id = :school_id AND CASE WHEN :string = '' THEN msm.name != '' WHEN :string != '' THEN msm.name LIKE '%s' END",
        "school_major_table_list_count"  => "SELECT (SELECT COUNT(msm.id) FROM mt_school_major msm INNER JOIN mt_school_major_link msml ON msm.id = msml.m_id INNER JOIN mt_school ms ON msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id) AS total, (SELECT COUNT(msm.id) AS filtered FROM mt_school_major msm INNER JOIN mt_school_major_link msml ON msm.id = msml.m_id INNER JOIN mt_school ms ON msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id %s) AS filtered",
        "school_major_table_list"        => "SELECT %s FROM mt_school_major msm INNER JOIN mt_school_major_link msml ON msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id LEFT JOIN mt_user mu ON msm.verified_by = mu.id %s ORDER BY %s LIMIT %s",
        "school_user_table_list_count"   => "SELECT (SELECT COUNT(DISTINCT msu.id) FROM mt_school_user msu INNER JOIN mt_school_generation msg on msu.graduated = msg.id INNER JOIN mt_school_role msr ON msu.role = msr.id INNER JOIN mt_school_user_link msul ON msu.id = msul.s_id INNER JOIN mt_school_class msc on msul.sc_id = msc.id INNER JOIN mt_school_class_link mscl ON msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id) AS total, (SELECT COUNT(DISTINCT msu.id) FROM mt_school_user msu INNER JOIN mt_school_generation msg on msu.graduated = msg.id INNER JOIN mt_school_role msr ON msu.role = msr.id INNER JOIN mt_school_user_link msul ON msu.id = msul.s_id INNER JOIN mt_school_class msc on msul.sc_id = msc.id INNER JOIN mt_school_class_link mscl ON msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id %s) AS filtered",
        "school_user_table_list"         => "SELECT %s FROM mt_school_user msu LEFT JOIN mt_school_user_gallery msug ON msu.id = msug.u_id INNER JOIN mt_school_generation msg on msu.graduated = msg.id INNER JOIN mt_school_role msr ON msu.role = msr.id INNER JOIN mt_school_user_link msul ON msu.id = msul.s_id INNER JOIN mt_school_class msc on msul.sc_id = msc.id INNER JOIN mt_school_class_link mscl ON msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id LEFT JOIN mt_user mu ON mu.id = msu.verified_by %s GROUP BY msu.id ORDER BY %s LIMIT %s",
        "school_generation_list"         => "SELECT id, YEAR(start_at) AS name FROM mt_school_generation",
        "school_role_list"               => "SELECT id, name FROM mt_school_role",
        "school_user_by_uuid"            => "SELECT msu.id, msu.first_name, msu.last_name, msr.name AS role, msu.gender FROM mt_school_user msu INNER JOIN mt_school_role msr ON msu.role = msr.id WHERE msu.uuid = ?",
        "school_students_per_student"    => "SELECT mc.id, mc.name, (SELECT COUNT(msu.id) FROM mt_school_link msl INNER JOIN mt_school ms on msl.s_id = ms.id INNER JOIN mt_school_major_link msml on ms.id = msml.s_id and msml.c_id = mc.id INNER JOIN mt_school_major msm on msml.m_id = msm.id INNER JOIN mt_school_class_link mscl on msm.id = mscl.m_id INNER JOIN mt_school_class msc on mscl.c_id = msc.id INNER JOIN mt_school_user_link msul on msc.id = msul.sc_id INNER JOIN mt_school_user msu on msul.s_id = msu.id WHERE msl.c_id = mc.id) AS tUser FROM mt_cities mc ORDER BY -mc.in_row DESC, tUser DESC",
        "school_class_list_per_gen"      => "SELECT msc.id as class_id, msc.uuid AS class_uuid, msc.name as class_name, YEAR(msg.start_at) AS class_generation, msg.id AS class_generation_id, ms.name as school_name, msm.name as major_name, COUNT(DISTINCT msu.id) AS school_user, mc.name AS city_name, mscg.uuid AS image_uuid FROM mt_school_class msc INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id INNER JOIN mt_school_user_link msul on msc.id = msul.sc_id INNER JOIN mt_school_user msu on msul.s_id = msu.id INNER JOIN mt_school_generation msg on msu.graduated = msg.id LEFT JOIN mt_school_class_gallery mscg on msc.id = mscg.sc_id WHERE msml.c_id = mc.id GROUP BY msu.graduated ORDER BY school_user DESC",
        "school_list_per_city"           => "SELECT mc.name AS city_name, ms.address AS school_address, ms.name AS school_name FROM mt_school ms INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id",
        "school_major_by_uuid"           => "SELECT msm.uuid, msm.name, msm.description, ms.id AS school_id, mc.id AS city_id FROM mt_school_major msm INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id WHERE msm.uuid = ?",
        "school_class_by_uuid"           => "SELECT msc.id, msc.uuid, msc.name, msc.description, msm.id AS major_id, ms.id AS school_id, ms.name AS school_name, mc.id AS city_id, mc.name AS city_name, mscg.uuid AS gallery_wallpaper FROM mt_school_class msc INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id LEFT JOIN mt_school_class_gallery mscg ON msc.id = mscg.sc_id WHERE msc.uuid = ?",
        "school_schooluser_by_uuid"      => "SELECT msu.uuid, msu.first_name, msu.last_name, msu.role, msu.gender, msu.graduated, msu.biography, msu.is_verified, msc.id AS class_id, msm.id AS major_id, ms.id AS school_id, mc.id AS city_id, GROUP_CONCAT(DISTINCT msug.uuid SEPARATOR ',') AS gallery_list FROM mt_school_user msu INNER JOIN mt_school_user_link msul on msu.id = msul.s_id INNER JOIN mt_school_class msc on msul.sc_id = msc.id INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id LEFT JOIN mt_school_user_gallery msug on msu.id = msug.u_id WHERE msu.uuid = ? GROUP BY msu.id",
        "school_school_user_image"       => "SELECT msug.image_name FROM mt_school_user msu INNER JOIN mt_school_user_gallery msug on msu.id = msug.u_id and msug.uuid = ? WHERE msu.uuid = ?",
        "school_school_draft_user_image"      => "SELECT msug.image_name FROM mt_school_draft_user msu INNER JOIN mt_school_draft_user_gallery msug on msu.id = msug.u_id and msug.uuid = ? WHERE msu.uuid = ?",
        "school_school_class_image"           => "SELECT mscg.image_name FROM mt_school_class msc INNER JOIN mt_school_class_gallery mscg on msc.id = mscg.sc_id and mscg.uuid = ? WHERE msc.uuid = ?",
        "school_draft_user_table_list_count"  => "SELECT (SELECT COUNT(DISTINCT msdu.id) FROM mt_school_draft_user msdu INNER JOIN mt_school_generation msg on msdu.graduated = msg.id INNER JOIN mt_school_role msr ON msdu.role = msr.id INNER JOIN mt_school_class msc on msdu.class_id = msc.id INNER JOIN mt_school_major msm on msdu.major_id = msm.id INNER JOIN mt_school ms on msdu.school_id = ms.id) AS total, (SELECT COUNT(DISTINCT msdu.id) FROM mt_school_draft_user msdu INNER JOIN mt_school_generation msg on msdu.graduated = msg.id INNER JOIN mt_school_role msr ON msdu.role = msr.id INNER JOIN mt_school_class msc on msdu.class_id = msc.id INNER JOIN mt_school_major msm on msdu.major_id = msm.id INNER JOIN mt_school ms on msdu.school_id = ms.id %s) AS filtered",
        "school_draft_user_table_list"        => "SELECT %s FROM mt_school_draft_user msdu LEFT JOIN mt_school_draft_user_gallery mtdug ON msdu.id = mtdug.u_id LEFT JOIN mt_school_generation msg on msdu.graduated = msg.id LEFT JOIN mt_school_role msr ON msdu.role = msr.id LEFT JOIN mt_school_class msc on msdu.class_id = msc.id LEFT JOIN mt_school_major msm on msdu.major_id = msm.id LEFT JOIN mt_school ms on msdu.school_id = ms.id LEFT JOIN mt_cities mc ON msdu.city_id = mc.id %s GROUP BY msdu.id ORDER BY %s LIMIT %s",
        "school_draft_user_get"               => "SELECT id, first_name, last_name, biography, gender, role, city_id, school_id, graduated, major_id, class_id FROM mt_school_draft_user WHERE uuid = ?",
        "school_draft_user_similar_get"       => "SELECT msu.uuid AS user_uuid, msu.first_name, msu.last_name, (SELECT uuid FROM mt_school_user_gallery msug WHERE msug.u_id = msu.id LIMIT 1) AS avatar FROM mt_school_user msu WHERE (LOWER(msu.first_name) = LOWER(%s) OR LOWER(msu.last_name) = LOWER(%s))",
        "school_draft_user_gallery_get"       => "SELECT uuid, image_name, is_primary FROM mt_school_draft_user_gallery WHERE u_id = ?",
        "school_user_same_check"              => "SELECT id FROM mt_school_user WHERE first_name = ? AND last_name = ? AND role = ? LIMIT 1",
        "school_search_engine"                => "SELECT msu.first_name, msu.last_name, msg.start_at AS generation, (SELECT mr.name FROM mt_roles mr WHERE mr.id = msu.role) AS role, (SELECT image_name FROM mt_school_user_gallery msug WHERE msug.u_id = msu.id LIMIT 1) AS image_name, msc.name AS class_name, msm.name AS major_name, ms.name AS school_name, mc.name AS city_name FROM mt_school_user msu INNER JOIN mt_school_generation msg on msu.graduated = msg.id INNER JOIN mt_school_user_link msul on msu.id = msul.s_id INNER JOIN mt_school_class msc on msul.sc_id = msc.id INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id WHERE ( msu.first_name REGEXP :regex OR msu.last_name REGEXP :regex OR msu.biography REGEXP :regex OR msu.graduated REGEXP :regex ) AND IF(:class IS NULL, 1, msc.id = :class) AND IF(:major IS NULL, 1, msm.id = :major) AND IF(:school IS NULL, 1, ms.id = :school) AND IF(:city IS NULL, 1, mc.id = :city) AND IF(:generation IS NULL, 1, msg.start_at = :generation)",
        "school_class_students_by_class_gen"  => "SELECT msu.uuid, msu.first_name, msu.last_name, msu.role, msu.gender, msu.graduated, msu.biography, msu.is_verified, msc.id AS class_id, msm.id AS major_id, ms.id AS school_id, mc.id AS city_id, (SELECT GROUP_CONCAT(msug.uuid SEPARATOR ',') FROM mt_school_user_gallery msug WHERE msug.u_id = msu.id) AS gallery_list FROM mt_school_user msu INNER JOIN mt_school_user_link msul on msu.id = msul.s_id INNER JOIN mt_school_class msc on msul.sc_id = msc.id INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id WHERE msc.id = ? AND ms.id = ? AND msu.graduated = ?",
        "school_student_random_list"          => "SELECT msu.id, msu.uuid, msu.first_name, msu.last_name, msr.name AS role, (SELECT msug.uuid FROM mt_school_user_gallery msug WHERE msug.u_id = msu.id LIMIT 1) AS gallery_name FROM mt_school_user msu INNER JOIN mt_school_role msr ON msu.role = msr.id ORDER BY RAND() LIMIT %d",
        "school_class_list_by_filter"         => "SELECT msc.id as class_id, msc.uuid AS class_uuid, msc.name as class_name, YEAR(msg.start_at) AS class_generation, msg.id AS class_generation_id, ms.name as school_name, msm.name as major_name, COUNT(DISTINCT msu.id) AS school_user, mc.name AS city_name, mscg.uuid AS image_uuid FROM mt_school_class msc INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id INNER JOIN mt_school_user_link msul on msc.id = msul.sc_id INNER JOIN mt_school_user msu on msul.s_id = msu.id INNER JOIN mt_school_generation msg on msu.graduated = msg.id LEFT JOIN mt_school_class_gallery mscg on msc.id = mscg.sc_id WHERE msml.c_id = mc.id AND IF(:city IS NULL, 1, mc.id = :city) AND IF(:school IS NULL, 1, ms.id = :school) AND IF(:major IS NULL, 1, msm.id = :major) GROUP BY msu.graduated LIMIT %d, %d",
        "school_class_list_by_filter_total"   => "SELECT COUNT(DISTINCT msc.id) AS total FROM mt_school_class msc INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id INNER JOIN mt_school_user_link msul on msc.id = msul.sc_id INNER JOIN mt_school_user msu on msul.s_id = msu.id LEFT JOIN mt_school_generation msg on msu.graduated = msg.id INNER JOIN mt_school_class_gallery mscg on msc.id = mscg.sc_id WHERE msml.c_id = mc.id AND IF(:city IS NULL, 1, mc.id = :city) AND IF(:school IS NULL, 1, ms.id = :school) AND IF(:major IS NULL, 1, msm.id = :major) GROUP BY msu.graduated",
        "school_student_list_by_query_search" => "SELECT msu.id AS student_id, msu.uuid AS student_uuid, CONCAT(msu.first_name, ' ', msu.last_name) AS student_name, msc.id AS class_id, msc.name AS class_name, msm.name AS major_name, ms.name AS school_name, mc.name AS city_name, (SELECT msug.uuid FROM mt_school_user_gallery msug WHERE msug.u_id = msu.id LIMIT 1) AS student_gallery, YEAR(msg.start_at) AS graduated FROM mt_school_user msu INNER JOIN mt_school_generation msg on msu.graduated = msg.id INNER JOIN mt_school_user_link msul on msu.id = msul.s_id INNER JOIN mt_school_class msc on msul.sc_id = msc.id INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id WHERE %s GROUP BY msg.start_at LIMIT %d, %d",
        "school_student_list_by_query_search_total" => "SELECT COUNT(DISTINCT msu.id) AS total FROM mt_school_user msu INNER JOIN mt_school_generation msg on msu.graduated = msg.id INNER JOIN mt_school_user_link msul on msu.id = msul.s_id INNER JOIN mt_school_class msc on msul.sc_id = msc.id INNER JOIN mt_school_class_link mscl on msc.id = mscl.c_id INNER JOIN mt_school_major msm on mscl.m_id = msm.id INNER JOIN mt_school_major_link msml on msm.id = msml.m_id INNER JOIN mt_school ms on msml.s_id = ms.id INNER JOIN mt_school_link msl on ms.id = msl.s_id INNER JOIN mt_cities mc on msl.c_id = mc.id WHERE %s GROUP BY msg.start_at"
    ];

    /**
     * @throws Exception
     */
    public function build(string $query, ?array $params): string
    {
        return (is_null($params)) ? $this->get($query) : sprintf($this->get($query), ...$params);
    }

    /**
     * @throws Exception
     */
    private function get(string $query) : string
    {
        if (array_key_exists($query, $this->queryBox) === false) throw new Exception('Query does not exist in our system.');

        return $this->queryBox[$query];
    }
}